<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="sortingWorkOuts.BubbleSorting"/>
    <fullyQualifiedTypeName name="java.lang.reflect.Array"/>
    <fullyQualifiedTypeName name="sample.SinglyandDoubly"/>
    <fullyQualifiedTypeName name="sortingWorkOuts.SinglyConstrection"/>
    <fullyQualifiedTypeName name="sample.RecrtionRevrseLiList"/>
    <fullyQualifiedTypeName name="sample.SinglyReverse"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="sample.LinkFromScrach"/>
    <fullyQualifiedTypeName name="sample.ArrayToList"/>
    <fullyQualifiedTypeName name="convertListToArray.CovertArrayToList"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="stackAndQ.StackWorkOut"/>
    <fullyQualifiedTypeName name="stackAndQ.StackMain"/>
    <fullyQualifiedTypeName name="stackAndQ.QueueWork"/>
    <fullyQualifiedTypeName name="sortingWork1.StackSample"/>
    <fullyQualifiedTypeName name="sortingWork1.QueueSample"/>
    <fullyQualifiedTypeName name="java.util.Hashtable"/>
    <fullyQualifiedTypeName name="hashFunction.HashFnct"/>
    <fullyQualifiedTypeName name="hashFunction.HashFnct.HashNode"/>
    <fullyQualifiedTypeName name="hashFunction.HashFunt2.HashNode"/>
    <fullyQualifiedTypeName name="hashFunction.HashFunt2"/>
    <fullyQualifiedTypeName name="java.sql.Array"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="sample.HashTableWk"/>
    <fullyQualifiedTypeName name="sample.HashTableWk.HashNode"/>
    <fullyQualifiedTypeName name="sample.StackWkOut.Node"/>
    <fullyQualifiedTypeName name="sample.StackWkOut"/>
    <fullyQualifiedTypeName name="sample.QueueWkOut"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="treeDataStructure.BinarySearchTree.TreeNode"/>
    <fullyQualifiedTypeName name="treeDataStructure.NewBinaryTree.Node"/>
    <fullyQualifiedTypeName name="sample.BSTwk.Node"/>
    <fullyQualifiedTypeName name="sample.MinHeapWk"/>
    <fullyQualifiedTypeName name="triesDataStructure.TrieNew.TrieNode"/>
    <fullyQualifiedTypeName name="triesDataStructure.TrieNew"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="graphDataStracture.Graph"/>
    <fullyQualifiedTypeName name="graphDataStracture.MatrixGraph"/>
    <fullyQualifiedTypeName name="java.lang.StringBuilder"/>
    <fullyQualifiedTypeName name="graphDataStracture.LinkGraph"/>
    <fullyQualifiedTypeName name="java.util.Queue"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="sample.Tries"/>
    <fullyQualifiedTypeName name="sample.Tries.triNode"/>
    <fullyQualifiedTypeName name="problemsDataStruc.DataStrct.Node"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="problemsDataStruc.DataStrct"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="problemsDataStruc.DataStrct.triNode"/>
</qualifiedTypeNameHistroy>
